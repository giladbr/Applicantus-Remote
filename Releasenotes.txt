======================
2010-02-07
======================
1. COLGROUP and COL is back. These are generated for the header, table content and footer.
2. Added AllowResizeColumn property to CoolGridView to get or set whether to allow user to resize the columnns manually.

======================
2010-02-01
======================
1. PagerStyle is now takin effect when the Pager is rendered.
2. Included "Gradient" theme for CoolGridView in the sample project.
3. Added "DefaultColumnWidth" property to override 100px as default column width.
4. Generates <TD><SPAN>...</SPAN></TD> instead of only <TD></TD> for every first row of a table in the header and footer. This is to fix a bug in IE7 and IE6 behavior when a style "white-space:nowrap" is applied to TD with a defined width.
5. Added Array bound checking inside method CoolGridViewFirstRow.PutInsideSpan(string) after executing a regular expression inside the method.
6. Fix: calls the JavaScript TableContainerScrollHandler() to adjust scroll region's height and width after resizing the column width by a user.

======================
2010-01-29
======================
1. Added DefaultColumnWidth property on CoolGridView
2. Generate <TD><SPAN>...</SPAN></TD> instead of only <TD></TD> on first row of table, header and footer.

======================
Build Number: 20100124
======================

In this release, item #1 and #2 are breaking-changes. You need to modify your code as described.

1. CoolCore.js and CoolCore.cs were added to IdeaSparx.CoolControls.Web project.
2. If you are using CoolGridView inside an update panel, there is no need of the add-on script. You should remove the following JavaScript code from your ASPX page. This functionality is now fully integrated in the CoolGridView control.

//Remove this JavaScript from your ASPX
function AjaxEndRequestHandler(sender, args) {
   var p = sender._updatePanelClientIDs;
   if (p != null)
   for (var j = 0; j < p.length; j++) {
          var scripts = $get(p[j]).getElementsByTagName("script");
          // .text is necessary for IE.
          for (var i = 0; i < scripts.length; i++) {
              try {
                   eval(scripts[i].innerHTML || scripts[i].text);
              } catch (e2) { }
          }
    }
}

try {
Sys.WebForms.PageRequestManager.getInstance() .add_endRequest(AjaxEndRequestHandler);
}
catch (e) { }


3. User can now resize column headers' width.
4. Column header and scroll position is preserved after a postback or callback.